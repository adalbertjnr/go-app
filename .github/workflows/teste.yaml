name: Build and Push Docker Image

on:
  push:
    branches:
      - teste

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Configure image tag
        run: |
          TAG=$(git rev-parse --short "$GITHUB_SHA")
          IMAGE_TAG="${{ github.run_number }}-${TAG}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: teste-app
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo $IMAGE_TAG > file.txt

      - name: Upload wrote docker compose tag
        uses: actions/upload-artifact@v3.1.2
        with:
          path: file.txt

  deploy_compose:
    needs: build-and-push
    runs-on: self-hosted

    steps:
      - name: Receiving image tag value
        uses: actions/download-artifact@v2.1.1
        with:
          name: artifact
          path: main

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Replacing image tag
        run: |
          pwd
          ls
          cat file.txt
          IMAGE_TAG=$(cat file.txt)
          echo $IMAGE_TAG
          sed -i "s,image:.*,image: $IMAGE_TAG," README.md
          cat README.md

      - name: Checking container status and deploy the app
        run: |
          echo "Ok"
          cat README.md
